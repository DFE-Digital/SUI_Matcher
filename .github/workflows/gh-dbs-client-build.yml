name: Build and Upload Client Watcher

on:
    workflow_dispatch:
        inputs:
            version:
                description: 'Version number'
                required: true
                default: 'v0.0.15'
            blob_storage_location:
                description: 'Blob storage location'
                required: true
                default: 's215d01-integration-container-01'
            storage_account:
                description: 'Storage account'
                required: true
                default: 's215d01integrationsa01'
            environment:
                description: 'Environment'
                required: true
                default: 'Integration'

permissions:
  id-token: write
  contents: read

jobs:
    build:
        runs-on: ubuntu-latest
        env: 
            AZURE_ENV_NAME: ${{ inputs.environment }}
            AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
            AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
            AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            AZURE_LOCATION: "westeurope"
            AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
            CLIENT_VERSION: ${{ inputs.version }}
            BLOB_STORAGE_LOCATION: ${{ inputs.blob_storage_location }}
            STORAGE_ACCOUNT: ${{ inputs.storage_account }}
            APPLICATIONINSIGHTS_CONNECTION_STRING: ${{ env.APPLICATIONINSIGHTS_CONNECTION_STRING }}

        steps:
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
            ref: ${{ env.CLIENT_VERSION }}

        - name: Setup .NET
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: '9.0.x'

        - name: Publish DBS Client Watcher
          run: dotnet publish SUI.DBS.Client.Watcher -r win-x64 --self-contained /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true --configuration Release --output ./output --version-suffix ${{ env.CLIENT_VERSION }}

        - name: Login to Azure
          uses: azure/login@v2
          with:
            client-id: ${{ env.AZURE_CLIENT_ID }}
            tenant-id: ${{ env.AZURE_TENANT_ID }}
            subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

        - name: Upload to Blob Storage
          run:
            az storage blob upload-batch --destination ${{ env.BLOB_STORAGE_LOCATION }} --account-name ${{ env.STORAGE_ACCOUNT }} --source ./output --pattern "*.exe" --overwrite