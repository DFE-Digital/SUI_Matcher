name: Azure App Deployment

on:
  push:
    branches:
      - main # automatically runs after a merge to main
  workflow_dispatch:
    inputs:
      environment:
        description: The environment target for deployment
        default: 'Integration'
        type: choice
        options:
          - 'Integration'
      version:
        description: The version of the infrastructure to deploy (if empty the latest version is use)
        type: string
        required: false
      environment_prefix:
        description: The prefix for the environment
        default: 's215d01'
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      AZURE_ENV_NAME: ${{ inputs.environment || 'Integration' }}
      AZURE_ENV_PREFIX: ${{ inputs.environment_prefix || 's215d01' }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_LOCATION: 'westeurope'
      AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
      AZURE_MONITORING_ACTION_GROUP_EMAIL: ${{ secrets.AZURE_MONITORING_ACTION_GROUP_EMAIL }}
      AZURE_CONTAINER_APP_MANAGED_ENVIRONMENT_NUMBER: ${{ secrets.AZURE_CONTAINER_APP_MANAGED_ENVIRONMENT_NUMBER }}
      AZURE_CONTAINER_APP_VNET: ${{ secrets.AZURE_CONTAINER_APP_VNET }}
      AZURE_CONTAINER_APP_ENV_SUBNET: ${{ secrets.AZURE_CONTAINER_APP_ENV_SUBNET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Use version inputted or find latest tag
        id: check-version
        run: |
          if [ -z "${{ github.event.inputs.version }}" ]; then
            echo "No input version provided. Fetching latest tag."
            git fetch --tags
            latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
            echo "Latest tag: $latest_tag"
            echo "APPLICATION_VERSION=$latest_tag" >> $GITHUB_ENV
          else
            echo "Using input version: ${{ github.event.inputs.version }}"
            echo "APPLICATION_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          fi

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.APPLICATION_VERSION }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install azd
        uses: Azure/setup-azd@v2

      - name: Log in with Azure (Federated Credentials)
        if: ${{ env.AZURE_CLIENT_ID != '' }}
        run: |
          azd auth login `
            --client-id "$Env:AZURE_CLIENT_ID" `
            --federated-credential-provider "github" `
            --tenant-id "$Env:AZURE_TENANT_ID"
        shell: pwsh

      - name: Refresh azd env (pulls latest infrastructure provision)
        run: azd env refresh --no-prompt
        working-directory: src/app-host

      - name: Deploy Application
        run: azd deploy --no-prompt
        working-directory: src/app-host