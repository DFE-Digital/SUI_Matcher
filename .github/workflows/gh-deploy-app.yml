name: Azure App Deployment

on:
  push:
    branches:
      - main # automatically runs after a merge to main
  workflow_dispatch:
    inputs:
      environment:
        description: The environment target for deployment
        default: 'Integration'
        type: choice
        options:
          - 'Integration'
      version:
        description: The version of the infrastructure to deploy
        type: string
        required: false

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      AZURE_ENV_NAME: ${{ inputs.environment }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_LOCATION: "westeurope"
      AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Check if input version is empty
        id: check-version
        run: |
          if [ -z "${{ github.event.inputs.version }}" ]; then
            echo "No input version provided. Fetching latest tag."
            git fetch --tags
            latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
            echo "Latest tag: $latest_tag"
            echo "APPLICATION_VERSION=$latest_tag" >> $GITHUB_ENV
          else
            echo "Using input version: ${{ github.event.inputs.version }}"
            echo "APPLICATION_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          fi
            
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.APPLICATION_VERSION }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install azd
        uses: Azure/setup-azd@v2

      - name: Install .NET Aspire workload
        run: dotnet workload install aspire

      - name: Log in with Azure (Federated Credentials)
        if: ${{ env.AZURE_CLIENT_ID != '' }}
        run: |
          azd auth login `
            --client-id "$Env:AZURE_CLIENT_ID" `
            --federated-credential-provider "github" `
            --tenant-id "$Env:AZURE_TENANT_ID"
        shell: pwsh

      - name: Refresh azd env (pulls latest infrastructure provision)
        run: azd env refresh --no-prompt
        working-directory: app-host

      - name: Deploy Application
        run: azd deploy --no-prompt
        working-directory: app-host