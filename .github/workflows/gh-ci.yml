name: CI for SUI_Matcher

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

        # For SonarCloud Scanner
      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: "microsoft"
          java-version: 21

      - name: Install SonarCloud Scanner
        shell: bash
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Install dotnet-reportgenerator-globaltool
        run: dotnet tool install --global dotnet-coverage

      - name: Install Liquid Test Reports
        shell: bash
        run: dotnet tool install --global LiquidTestReports.Cli --version 2.0.0-beta.2

      - name: Install & Configure SpatiaLite
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install libspatialite-dev libsqlite3-mod-spatialite -y
          sudo ldconfig "/usr/lib/x86_64-linux-gnu/mod_spatialite.so"

      - name: Start SonarCloud Scanner
        shell: bash
        run: |
          dotnet-sonarscanner begin \
          /k:"DFE-Digital_SUI_Matcher" \
          /o:"dfe-digital" \
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.cs.vscoveragexml.reportsPaths=coverage/coverage.xml \
          /d:sonar.coverage.exclusions=**/Program.cs,**/StartupExtensions.cs,**/*.html,**/*.json,**/*.sql,**/*.js,**/*.ts,**/*.scss,**/wwwroot/**,**/Migrations/** \
          /d:sonar.exclusions=**/*.html,**/*.json,**/*.sql,**/*.js,**/*.ts,**/*.scss,**/wwwroot/**,**/Migrations/**,**/bin/**,**/obj/** \
          /d:sonar.scanner.skipJreProvisioning=true \
          /d:sonar.dotnet.excludeTestProjects=true \
          /d:sonar.scanner.scanAll=false

          - name: Restore dependencies
          run: dotnet restore
  
      - name: Format code
        run: dotnet format --verify-no-changes --verbosity diagnostic

      - name: Build
        run: dotnet build --no-restore -WarnAsError

      - name: Test
        run: |
          dotnet test --no-build --settings tests.runsettings --results-directory ./coverage --logger "trx;LogFileName=test-results.trx"
          dotnet coverage merge --reports "coverage/**/coverage.cobertura.xml" -f cobertura -o coverage/coverage.xml

      - name: End SonarCloud Scanner
        if: always()
        shell: bash
        run: dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Generate Test Report
        if: always()
        shell: bash
        run: |
          liquid --inputs "File=**/*test-results.trx" --output-file results.md
          cat results.md >> $GITHUB_STEP_SUMMARY
      
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: results.md