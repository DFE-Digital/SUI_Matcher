name: Publish client NuGet packages
on:
  workflow_dispatch:
    inputs:
      publish-client:
        description: 'Publish the client watcher to NuGet (Uses github latest tag)'
        required: true
        default: false
        type: boolean
      publish-response-logger:
        description: 'Publish the response logger to NuGet (Uses github latest tag)'
        required: true
        default: false
        type: boolean
        
env: 
  client_name: 'DFE.SUI.Client.Watcher'
  response_logger_name: 'DFE.SUI.DBS.Response.Logger.Watcher'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Fetch latest GitHub tag
        id: fetch-latest-tag
        run: |
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "Latest tag: $latest_tag"
          echo "LATEST_VERSION=latest_tag" >> $GITHUB_ENV

      - name: Package Client Watcher
        if: ${{ github.event.inputs.publish-client == 'true' }}
        run: |
          dotnet pack ./src/tools/client/SUI.Client.Watcher/SUI.Client.Watcher.csproj \
            --configuration Release \
            --output ./nukpg \
            /p:Version=${{ env.LATEST_VERSION }}

      - name: Publish Client Watcher
        if: ${{ github.event.inputs.publish-client == 'true' }}
        run: |
          dotnet nuget push ./nukpg/${{env.client_name}}.${{ env.PACKAGE_VERSION }}.nupkg \
            --source https://api.nuget.org/v3/index.json \
            --api-key ${{ secrets.NUGET_API_KEY }}
          
      - name: Package Response Logger
        if: ${{ github.event.inputs.publish-response-logger == 'true' }}
        run: |
          dotnet pack ./src/tools/DbsResponseLogger/SUI.DBS.Response.Logger.Watcher/SUI.DBS.Response.Logger.Watcher.csproj \
            --configuration Release \
            --output ./nukpg \
            /p:Version=${{ env.LATEST_VERSION }}
          
      - name: Publish Response Logger
        if: ${{ github.event.inputs.publish-response-logger == 'true' }}
        run: |
          dotnet nuget push ./nukpg/${{env.response_logger_name}}.${{ env.PACKAGE_VERSION }}.nupkg \
            --source https://api.nuget.org/v3/index.json \
            --api-key ${{ secrets.NUGET_API_KEY }}
      
          
